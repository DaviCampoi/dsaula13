services:

  # NODE
  node-web-aula13-tf-container:
    build:
      context: .
      dockerfile: docker/node22-web/Dockerfile.dev
    env_file: .env
    volumes:
      - .:/app
      - node-modules-aula13-tf-volume:/app/node_modules
    restart: unless-stopped
    environment:
      - NODE_PORT=3000
      - IS_CONTAINER=TRUE
    expose:
      - 3000  # substitua ${NODE_PORT} por 3000 fixo para evitar erro
    networks:
      - project-aula13-tf-network
    depends_on:
      - postgres-aula13-tf-container

  # NGINX
  nginx-aula13-tf-container:
    build:
      context: .
      dockerfile: docker/nginx/Dockerfile
    ports:
      - "3000:80"  # substitua ${PORT} por 3000 fixo para evitar erro
    volumes:
      - ./public:/var/www/public
    depends_on:
      - node-web-aula13-tf-container
    networks:
      - project-aula13-tf-network

  # POSTGRES
  postgres-aula13-tf-container:
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: America/Sao_Paulo
    ports:
      - "6789:5432"  # substitua ${POSTGRES_PORT} por 5432 fixo
    volumes:
      - pgdata-aula13-tf-volume:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      project-aula13-tf-network:
        aliases:
          - ${POSTGRES_HOST}

networks:
  project-aula13-tf-network:
    driver: bridge

volumes:
  pgdata-aula13-tf-volume:
  node-modules-aula13-tf-volume:
